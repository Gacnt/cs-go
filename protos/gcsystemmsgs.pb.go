// Code generated by protoc-gen-go.
// source: gcsystemmsgs.proto
// DO NOT EDIT!

package csgobufs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EGCSystemMsg int32

const (
	EGCSystemMsg_k_EGCMsgInvalid                           EGCSystemMsg = 0
	EGCSystemMsg_k_EGCMsgMulti                             EGCSystemMsg = 1
	EGCSystemMsg_k_EGCMsgGenericReply                      EGCSystemMsg = 10
	EGCSystemMsg_k_EGCMsgSystemBase                        EGCSystemMsg = 50
	EGCSystemMsg_k_EGCMsgAchievementAwarded                EGCSystemMsg = 51
	EGCSystemMsg_k_EGCMsgConCommand                        EGCSystemMsg = 52
	EGCSystemMsg_k_EGCMsgStartPlaying                      EGCSystemMsg = 53
	EGCSystemMsg_k_EGCMsgStopPlaying                       EGCSystemMsg = 54
	EGCSystemMsg_k_EGCMsgStartGameserver                   EGCSystemMsg = 55
	EGCSystemMsg_k_EGCMsgStopGameserver                    EGCSystemMsg = 56
	EGCSystemMsg_k_EGCMsgWGRequest                         EGCSystemMsg = 57
	EGCSystemMsg_k_EGCMsgWGResponse                        EGCSystemMsg = 58
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchema            EGCSystemMsg = 59
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchemaResponse    EGCSystemMsg = 60
	EGCSystemMsg_k_EGCMsgGetUserStatsDEPRECATED            EGCSystemMsg = 61
	EGCSystemMsg_k_EGCMsgGetUserStatsResponse              EGCSystemMsg = 62
	EGCSystemMsg_k_EGCMsgAppInfoUpdated                    EGCSystemMsg = 63
	EGCSystemMsg_k_EGCMsgValidateSession                   EGCSystemMsg = 64
	EGCSystemMsg_k_EGCMsgValidateSessionResponse           EGCSystemMsg = 65
	EGCSystemMsg_k_EGCMsgLookupAccountFromInput            EGCSystemMsg = 66
	EGCSystemMsg_k_EGCMsgSendHTTPRequest                   EGCSystemMsg = 67
	EGCSystemMsg_k_EGCMsgSendHTTPRequestResponse           EGCSystemMsg = 68
	EGCSystemMsg_k_EGCMsgPreTestSetup                      EGCSystemMsg = 69
	EGCSystemMsg_k_EGCMsgRecordSupportAction               EGCSystemMsg = 70
	EGCSystemMsg_k_EGCMsgGetAccountDetails_DEPRECATED      EGCSystemMsg = 71
	EGCSystemMsg_k_EGCMsgReceiveInterAppMessage            EGCSystemMsg = 73
	EGCSystemMsg_k_EGCMsgFindAccounts                      EGCSystemMsg = 74
	EGCSystemMsg_k_EGCMsgPostAlert                         EGCSystemMsg = 75
	EGCSystemMsg_k_EGCMsgGetLicenses                       EGCSystemMsg = 76
	EGCSystemMsg_k_EGCMsgGetUserStats                      EGCSystemMsg = 77
	EGCSystemMsg_k_EGCMsgGetCommands                       EGCSystemMsg = 78
	EGCSystemMsg_k_EGCMsgGetCommandsResponse               EGCSystemMsg = 79
	EGCSystemMsg_k_EGCMsgAddFreeLicense                    EGCSystemMsg = 80
	EGCSystemMsg_k_EGCMsgAddFreeLicenseResponse            EGCSystemMsg = 81
	EGCSystemMsg_k_EGCMsgGetIPLocation                     EGCSystemMsg = 82
	EGCSystemMsg_k_EGCMsgGetIPLocationResponse             EGCSystemMsg = 83
	EGCSystemMsg_k_EGCMsgSystemStatsSchema                 EGCSystemMsg = 84
	EGCSystemMsg_k_EGCMsgGetSystemStats                    EGCSystemMsg = 85
	EGCSystemMsg_k_EGCMsgGetSystemStatsResponse            EGCSystemMsg = 86
	EGCSystemMsg_k_EGCMsgSendEmail                         EGCSystemMsg = 87
	EGCSystemMsg_k_EGCMsgSendEmailResponse                 EGCSystemMsg = 88
	EGCSystemMsg_k_EGCMsgGetEmailTemplate                  EGCSystemMsg = 89
	EGCSystemMsg_k_EGCMsgGetEmailTemplateResponse          EGCSystemMsg = 90
	EGCSystemMsg_k_EGCMsgGrantGuestPass                    EGCSystemMsg = 91
	EGCSystemMsg_k_EGCMsgGrantGuestPassResponse            EGCSystemMsg = 92
	EGCSystemMsg_k_EGCMsgGetAccountDetails                 EGCSystemMsg = 93
	EGCSystemMsg_k_EGCMsgGetAccountDetailsResponse         EGCSystemMsg = 94
	EGCSystemMsg_k_EGCMsgGetPersonaNames                   EGCSystemMsg = 95
	EGCSystemMsg_k_EGCMsgGetPersonaNamesResponse           EGCSystemMsg = 96
	EGCSystemMsg_k_EGCMsgMultiplexMsg                      EGCSystemMsg = 97
	EGCSystemMsg_k_EGCMsgMultiplexMsgResponse              EGCSystemMsg = 98
	EGCSystemMsg_k_EGCMsgWebAPIRegisterInterfaces          EGCSystemMsg = 101
	EGCSystemMsg_k_EGCMsgWebAPIJobRequest                  EGCSystemMsg = 102
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestHttpResponse      EGCSystemMsg = 104
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestForwardResponse   EGCSystemMsg = 105
	EGCSystemMsg_k_EGCMsgMemCachedGet                      EGCSystemMsg = 200
	EGCSystemMsg_k_EGCMsgMemCachedGetResponse              EGCSystemMsg = 201
	EGCSystemMsg_k_EGCMsgMemCachedSet                      EGCSystemMsg = 202
	EGCSystemMsg_k_EGCMsgMemCachedDelete                   EGCSystemMsg = 203
	EGCSystemMsg_k_EGCMsgMemCachedStats                    EGCSystemMsg = 204
	EGCSystemMsg_k_EGCMsgMemCachedStatsResponse            EGCSystemMsg = 205
	EGCSystemMsg_k_EGCMsgMasterSetDirectory                EGCSystemMsg = 220
	EGCSystemMsg_k_EGCMsgMasterSetDirectoryResponse        EGCSystemMsg = 221
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRouting            EGCSystemMsg = 222
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRoutingResponse    EGCSystemMsg = 223
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRouting         EGCSystemMsg = 224
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRoutingResponse EGCSystemMsg = 225
	EGCSystemMsg_k_EGCMsgSetOptions                        EGCSystemMsg = 226
	EGCSystemMsg_k_EGCMsgSetOptionsResponse                EGCSystemMsg = 227
	EGCSystemMsg_k_EGCMsgSystemBase2                       EGCSystemMsg = 500
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatus            EGCSystemMsg = 501
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatusResponse    EGCSystemMsg = 502
	EGCSystemMsg_k_EGCMsgUpdateSession                     EGCSystemMsg = 503
	EGCSystemMsg_k_EGCMsgGCAccountVacStatusChange          EGCSystemMsg = 504
	EGCSystemMsg_k_EGCMsgCheckFriendship                   EGCSystemMsg = 505
	EGCSystemMsg_k_EGCMsgCheckFriendshipResponse           EGCSystemMsg = 506
)

var EGCSystemMsg_name = map[int32]string{
	0:   "k_EGCMsgInvalid",
	1:   "k_EGCMsgMulti",
	10:  "k_EGCMsgGenericReply",
	50:  "k_EGCMsgSystemBase",
	51:  "k_EGCMsgAchievementAwarded",
	52:  "k_EGCMsgConCommand",
	53:  "k_EGCMsgStartPlaying",
	54:  "k_EGCMsgStopPlaying",
	55:  "k_EGCMsgStartGameserver",
	56:  "k_EGCMsgStopGameserver",
	57:  "k_EGCMsgWGRequest",
	58:  "k_EGCMsgWGResponse",
	59:  "k_EGCMsgGetUserGameStatsSchema",
	60:  "k_EGCMsgGetUserGameStatsSchemaResponse",
	61:  "k_EGCMsgGetUserStatsDEPRECATED",
	62:  "k_EGCMsgGetUserStatsResponse",
	63:  "k_EGCMsgAppInfoUpdated",
	64:  "k_EGCMsgValidateSession",
	65:  "k_EGCMsgValidateSessionResponse",
	66:  "k_EGCMsgLookupAccountFromInput",
	67:  "k_EGCMsgSendHTTPRequest",
	68:  "k_EGCMsgSendHTTPRequestResponse",
	69:  "k_EGCMsgPreTestSetup",
	70:  "k_EGCMsgRecordSupportAction",
	71:  "k_EGCMsgGetAccountDetails_DEPRECATED",
	73:  "k_EGCMsgReceiveInterAppMessage",
	74:  "k_EGCMsgFindAccounts",
	75:  "k_EGCMsgPostAlert",
	76:  "k_EGCMsgGetLicenses",
	77:  "k_EGCMsgGetUserStats",
	78:  "k_EGCMsgGetCommands",
	79:  "k_EGCMsgGetCommandsResponse",
	80:  "k_EGCMsgAddFreeLicense",
	81:  "k_EGCMsgAddFreeLicenseResponse",
	82:  "k_EGCMsgGetIPLocation",
	83:  "k_EGCMsgGetIPLocationResponse",
	84:  "k_EGCMsgSystemStatsSchema",
	85:  "k_EGCMsgGetSystemStats",
	86:  "k_EGCMsgGetSystemStatsResponse",
	87:  "k_EGCMsgSendEmail",
	88:  "k_EGCMsgSendEmailResponse",
	89:  "k_EGCMsgGetEmailTemplate",
	90:  "k_EGCMsgGetEmailTemplateResponse",
	91:  "k_EGCMsgGrantGuestPass",
	92:  "k_EGCMsgGrantGuestPassResponse",
	93:  "k_EGCMsgGetAccountDetails",
	94:  "k_EGCMsgGetAccountDetailsResponse",
	95:  "k_EGCMsgGetPersonaNames",
	96:  "k_EGCMsgGetPersonaNamesResponse",
	97:  "k_EGCMsgMultiplexMsg",
	98:  "k_EGCMsgMultiplexMsgResponse",
	101: "k_EGCMsgWebAPIRegisterInterfaces",
	102: "k_EGCMsgWebAPIJobRequest",
	104: "k_EGCMsgWebAPIJobRequestHttpResponse",
	105: "k_EGCMsgWebAPIJobRequestForwardResponse",
	200: "k_EGCMsgMemCachedGet",
	201: "k_EGCMsgMemCachedGetResponse",
	202: "k_EGCMsgMemCachedSet",
	203: "k_EGCMsgMemCachedDelete",
	204: "k_EGCMsgMemCachedStats",
	205: "k_EGCMsgMemCachedStatsResponse",
	220: "k_EGCMsgMasterSetDirectory",
	221: "k_EGCMsgMasterSetDirectoryResponse",
	222: "k_EGCMsgMasterSetWebAPIRouting",
	223: "k_EGCMsgMasterSetWebAPIRoutingResponse",
	224: "k_EGCMsgMasterSetClientMsgRouting",
	225: "k_EGCMsgMasterSetClientMsgRoutingResponse",
	226: "k_EGCMsgSetOptions",
	227: "k_EGCMsgSetOptionsResponse",
	500: "k_EGCMsgSystemBase2",
	501: "k_EGCMsgGetPurchaseTrustStatus",
	502: "k_EGCMsgGetPurchaseTrustStatusResponse",
	503: "k_EGCMsgUpdateSession",
	504: "k_EGCMsgGCAccountVacStatusChange",
	505: "k_EGCMsgCheckFriendship",
	506: "k_EGCMsgCheckFriendshipResponse",
}
var EGCSystemMsg_value = map[string]int32{
	"k_EGCMsgInvalid":                           0,
	"k_EGCMsgMulti":                             1,
	"k_EGCMsgGenericReply":                      10,
	"k_EGCMsgSystemBase":                        50,
	"k_EGCMsgAchievementAwarded":                51,
	"k_EGCMsgConCommand":                        52,
	"k_EGCMsgStartPlaying":                      53,
	"k_EGCMsgStopPlaying":                       54,
	"k_EGCMsgStartGameserver":                   55,
	"k_EGCMsgStopGameserver":                    56,
	"k_EGCMsgWGRequest":                         57,
	"k_EGCMsgWGResponse":                        58,
	"k_EGCMsgGetUserGameStatsSchema":            59,
	"k_EGCMsgGetUserGameStatsSchemaResponse":    60,
	"k_EGCMsgGetUserStatsDEPRECATED":            61,
	"k_EGCMsgGetUserStatsResponse":              62,
	"k_EGCMsgAppInfoUpdated":                    63,
	"k_EGCMsgValidateSession":                   64,
	"k_EGCMsgValidateSessionResponse":           65,
	"k_EGCMsgLookupAccountFromInput":            66,
	"k_EGCMsgSendHTTPRequest":                   67,
	"k_EGCMsgSendHTTPRequestResponse":           68,
	"k_EGCMsgPreTestSetup":                      69,
	"k_EGCMsgRecordSupportAction":               70,
	"k_EGCMsgGetAccountDetails_DEPRECATED":      71,
	"k_EGCMsgReceiveInterAppMessage":            73,
	"k_EGCMsgFindAccounts":                      74,
	"k_EGCMsgPostAlert":                         75,
	"k_EGCMsgGetLicenses":                       76,
	"k_EGCMsgGetUserStats":                      77,
	"k_EGCMsgGetCommands":                       78,
	"k_EGCMsgGetCommandsResponse":               79,
	"k_EGCMsgAddFreeLicense":                    80,
	"k_EGCMsgAddFreeLicenseResponse":            81,
	"k_EGCMsgGetIPLocation":                     82,
	"k_EGCMsgGetIPLocationResponse":             83,
	"k_EGCMsgSystemStatsSchema":                 84,
	"k_EGCMsgGetSystemStats":                    85,
	"k_EGCMsgGetSystemStatsResponse":            86,
	"k_EGCMsgSendEmail":                         87,
	"k_EGCMsgSendEmailResponse":                 88,
	"k_EGCMsgGetEmailTemplate":                  89,
	"k_EGCMsgGetEmailTemplateResponse":          90,
	"k_EGCMsgGrantGuestPass":                    91,
	"k_EGCMsgGrantGuestPassResponse":            92,
	"k_EGCMsgGetAccountDetails":                 93,
	"k_EGCMsgGetAccountDetailsResponse":         94,
	"k_EGCMsgGetPersonaNames":                   95,
	"k_EGCMsgGetPersonaNamesResponse":           96,
	"k_EGCMsgMultiplexMsg":                      97,
	"k_EGCMsgMultiplexMsgResponse":              98,
	"k_EGCMsgWebAPIRegisterInterfaces":          101,
	"k_EGCMsgWebAPIJobRequest":                  102,
	"k_EGCMsgWebAPIJobRequestHttpResponse":      104,
	"k_EGCMsgWebAPIJobRequestForwardResponse":   105,
	"k_EGCMsgMemCachedGet":                      200,
	"k_EGCMsgMemCachedGetResponse":              201,
	"k_EGCMsgMemCachedSet":                      202,
	"k_EGCMsgMemCachedDelete":                   203,
	"k_EGCMsgMemCachedStats":                    204,
	"k_EGCMsgMemCachedStatsResponse":            205,
	"k_EGCMsgMasterSetDirectory":                220,
	"k_EGCMsgMasterSetDirectoryResponse":        221,
	"k_EGCMsgMasterSetWebAPIRouting":            222,
	"k_EGCMsgMasterSetWebAPIRoutingResponse":    223,
	"k_EGCMsgMasterSetClientMsgRouting":         224,
	"k_EGCMsgMasterSetClientMsgRoutingResponse": 225,
	"k_EGCMsgSetOptions":                        226,
	"k_EGCMsgSetOptionsResponse":                227,
	"k_EGCMsgSystemBase2":                       500,
	"k_EGCMsgGetPurchaseTrustStatus":            501,
	"k_EGCMsgGetPurchaseTrustStatusResponse":    502,
	"k_EGCMsgUpdateSession":                     503,
	"k_EGCMsgGCAccountVacStatusChange":          504,
	"k_EGCMsgCheckFriendship":                   505,
	"k_EGCMsgCheckFriendshipResponse":           506,
}

func (x EGCSystemMsg) Enum() *EGCSystemMsg {
	p := new(EGCSystemMsg)
	*p = x
	return p
}
func (x EGCSystemMsg) String() string {
	return proto.EnumName(EGCSystemMsg_name, int32(x))
}
func (x *EGCSystemMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCSystemMsg_value, data, "EGCSystemMsg")
	if err != nil {
		return err
	}
	*x = EGCSystemMsg(value)
	return nil
}
func (EGCSystemMsg) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type ESOMsg int32

const (
	ESOMsg_k_ESOMsg_Create                   ESOMsg = 21
	ESOMsg_k_ESOMsg_Update                   ESOMsg = 22
	ESOMsg_k_ESOMsg_Destroy                  ESOMsg = 23
	ESOMsg_k_ESOMsg_CacheSubscribed          ESOMsg = 24
	ESOMsg_k_ESOMsg_CacheUnsubscribed        ESOMsg = 25
	ESOMsg_k_ESOMsg_UpdateMultiple           ESOMsg = 26
	ESOMsg_k_ESOMsg_CacheSubscriptionCheck   ESOMsg = 27
	ESOMsg_k_ESOMsg_CacheSubscriptionRefresh ESOMsg = 28
)

var ESOMsg_name = map[int32]string{
	21: "k_ESOMsg_Create",
	22: "k_ESOMsg_Update",
	23: "k_ESOMsg_Destroy",
	24: "k_ESOMsg_CacheSubscribed",
	25: "k_ESOMsg_CacheUnsubscribed",
	26: "k_ESOMsg_UpdateMultiple",
	27: "k_ESOMsg_CacheSubscriptionCheck",
	28: "k_ESOMsg_CacheSubscriptionRefresh",
}
var ESOMsg_value = map[string]int32{
	"k_ESOMsg_Create":                   21,
	"k_ESOMsg_Update":                   22,
	"k_ESOMsg_Destroy":                  23,
	"k_ESOMsg_CacheSubscribed":          24,
	"k_ESOMsg_CacheUnsubscribed":        25,
	"k_ESOMsg_UpdateMultiple":           26,
	"k_ESOMsg_CacheSubscriptionCheck":   27,
	"k_ESOMsg_CacheSubscriptionRefresh": 28,
}

func (x ESOMsg) Enum() *ESOMsg {
	p := new(ESOMsg)
	*p = x
	return p
}
func (x ESOMsg) String() string {
	return proto.EnumName(ESOMsg_name, int32(x))
}
func (x *ESOMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESOMsg_value, data, "ESOMsg")
	if err != nil {
		return err
	}
	*x = ESOMsg(value)
	return nil
}
func (ESOMsg) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

type EGCBaseClientMsg int32

const (
	EGCBaseClientMsg_k_EMsgGCClientWelcome          EGCBaseClientMsg = 4004
	EGCBaseClientMsg_k_EMsgGCServerWelcome          EGCBaseClientMsg = 4005
	EGCBaseClientMsg_k_EMsgGCClientHello            EGCBaseClientMsg = 4006
	EGCBaseClientMsg_k_EMsgGCServerHello            EGCBaseClientMsg = 4007
	EGCBaseClientMsg_k_EMsgGCClientConnectionStatus EGCBaseClientMsg = 4009
	EGCBaseClientMsg_k_EMsgGCServerConnectionStatus EGCBaseClientMsg = 4010
)

var EGCBaseClientMsg_name = map[int32]string{
	4004: "k_EMsgGCClientWelcome",
	4005: "k_EMsgGCServerWelcome",
	4006: "k_EMsgGCClientHello",
	4007: "k_EMsgGCServerHello",
	4009: "k_EMsgGCClientConnectionStatus",
	4010: "k_EMsgGCServerConnectionStatus",
}
var EGCBaseClientMsg_value = map[string]int32{
	"k_EMsgGCClientWelcome":          4004,
	"k_EMsgGCServerWelcome":          4005,
	"k_EMsgGCClientHello":            4006,
	"k_EMsgGCServerHello":            4007,
	"k_EMsgGCClientConnectionStatus": 4009,
	"k_EMsgGCServerConnectionStatus": 4010,
}

func (x EGCBaseClientMsg) Enum() *EGCBaseClientMsg {
	p := new(EGCBaseClientMsg)
	*p = x
	return p
}
func (x EGCBaseClientMsg) String() string {
	return proto.EnumName(EGCBaseClientMsg_name, int32(x))
}
func (x *EGCBaseClientMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCBaseClientMsg_value, data, "EGCBaseClientMsg")
	if err != nil {
		return err
	}
	*x = EGCBaseClientMsg(value)
	return nil
}
func (EGCBaseClientMsg) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

type EGCToGCMsg int32

const (
	EGCToGCMsg_k_EGCToGCMsgMasterAck             EGCToGCMsg = 150
	EGCToGCMsg_k_EGCToGCMsgMasterAckResponse     EGCToGCMsg = 151
	EGCToGCMsg_k_EGCToGCMsgRouted                EGCToGCMsg = 152
	EGCToGCMsg_k_EGCToGCMsgRoutedReply           EGCToGCMsg = 153
	EGCToGCMsg_k_EMsgUpdateSessionIP             EGCToGCMsg = 154
	EGCToGCMsg_k_EMsgRequestSessionIP            EGCToGCMsg = 155
	EGCToGCMsg_k_EMsgRequestSessionIPResponse    EGCToGCMsg = 156
	EGCToGCMsg_k_EGCToGCMsgMasterStartupComplete EGCToGCMsg = 157
)

var EGCToGCMsg_name = map[int32]string{
	150: "k_EGCToGCMsgMasterAck",
	151: "k_EGCToGCMsgMasterAckResponse",
	152: "k_EGCToGCMsgRouted",
	153: "k_EGCToGCMsgRoutedReply",
	154: "k_EMsgUpdateSessionIP",
	155: "k_EMsgRequestSessionIP",
	156: "k_EMsgRequestSessionIPResponse",
	157: "k_EGCToGCMsgMasterStartupComplete",
}
var EGCToGCMsg_value = map[string]int32{
	"k_EGCToGCMsgMasterAck":             150,
	"k_EGCToGCMsgMasterAckResponse":     151,
	"k_EGCToGCMsgRouted":                152,
	"k_EGCToGCMsgRoutedReply":           153,
	"k_EMsgUpdateSessionIP":             154,
	"k_EMsgRequestSessionIP":            155,
	"k_EMsgRequestSessionIPResponse":    156,
	"k_EGCToGCMsgMasterStartupComplete": 157,
}

func (x EGCToGCMsg) Enum() *EGCToGCMsg {
	p := new(EGCToGCMsg)
	*p = x
	return p
}
func (x EGCToGCMsg) String() string {
	return proto.EnumName(EGCToGCMsg_name, int32(x))
}
func (x *EGCToGCMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCToGCMsg_value, data, "EGCToGCMsg")
	if err != nil {
		return err
	}
	*x = EGCToGCMsg(value)
	return nil
}
func (EGCToGCMsg) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func init() {
	proto.RegisterEnum("EGCSystemMsg", EGCSystemMsg_name, EGCSystemMsg_value)
	proto.RegisterEnum("ESOMsg", ESOMsg_name, ESOMsg_value)
	proto.RegisterEnum("EGCBaseClientMsg", EGCBaseClientMsg_name, EGCBaseClientMsg_value)
	proto.RegisterEnum("EGCToGCMsg", EGCToGCMsg_name, EGCToGCMsg_value)
}

var fileDescriptor5 = []byte{
	// 1260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x56, 0x49, 0x93, 0xdb, 0x44,
	0x14, 0x8e, 0x70, 0x15, 0x45, 0x75, 0x41, 0xa5, 0xd3, 0x93, 0xcc, 0x64, 0x99, 0xc4, 0x49, 0x08,
	0x09, 0x0c, 0x55, 0x39, 0x84, 0x7d, 0xc7, 0xb1, 0x3d, 0x1e, 0x87, 0x99, 0xc4, 0xd8, 0x9e, 0x0c,
	0x84, 0x65, 0x90, 0xa5, 0x37, 0xb6, 0x2a, 0x92, 0x5a, 0x74, 0xb7, 0x06, 0xe6, 0xc6, 0x95, 0x2a,
	0xce, 0xec, 0xdc, 0x58, 0x0a, 0x7e, 0x49, 0xd8, 0xfe, 0x01, 0x3b, 0x3f, 0x80, 0x0b, 0xfb, 0x89,
	0x27, 0x59, 0x6a, 0xb5, 0xbc, 0x84, 0x9b, 0xd4, 0xdf, 0xdb, 0xdf, 0xf7, 0x5e, 0x37, 0x61, 0x43,
	0x47, 0xee, 0x49, 0x05, 0x41, 0x20, 0x87, 0xf2, 0x7c, 0x24, 0xb8, 0xe2, 0x2b, 0x6f, 0x2d, 0x90,
	0xdb, 0x9b, 0xad, 0x7a, 0x2f, 0x3d, 0xdf, 0x90, 0x43, 0xb6, 0x40, 0xf6, 0x5f, 0xdf, 0xc6, 0x13,
	0xfc, 0x6e, 0x87, 0xbb, 0xb6, 0xef, 0xb9, 0x74, 0x1f, 0x3b, 0x40, 0xee, 0xc8, 0x0f, 0x37, 0x62,
	0x5f, 0x79, 0xd4, 0x62, 0x87, 0xc9, 0xc1, 0xfc, 0xa8, 0x05, 0x21, 0x08, 0xcf, 0xe9, 0x42, 0xe4,
	0xef, 0x51, 0xc2, 0x16, 0x09, 0xcb, 0x91, 0xb1, 0xd9, 0x8b, 0xb6, 0x04, 0x7a, 0x81, 0x9d, 0x20,
	0x47, 0xf3, 0xf3, 0x9a, 0x33, 0xf2, 0x60, 0x17, 0x02, 0x08, 0x55, 0xed, 0x35, 0x5b, 0xb8, 0xe0,
	0xd2, 0xfb, 0x4c, 0xbd, 0x3a, 0x0f, 0xeb, 0x3c, 0x08, 0xec, 0xd0, 0xa5, 0xf7, 0x9b, 0x9e, 0x7a,
	0xca, 0x16, 0xaa, 0xe3, 0xdb, 0x7b, 0x5e, 0x38, 0xa4, 0x0f, 0xb0, 0x25, 0xb2, 0x50, 0x20, 0x3c,
	0xca, 0x81, 0x07, 0xd9, 0x31, 0xb2, 0x54, 0x52, 0x69, 0xd9, 0x01, 0x48, 0x10, 0xbb, 0x20, 0xe8,
	0x43, 0xec, 0x28, 0x59, 0x34, 0xb5, 0x0c, 0xec, 0x61, 0x76, 0x88, 0x1c, 0xc8, 0xb1, 0xad, 0x56,
	0x17, 0x5e, 0x8d, 0x41, 0x2a, 0xfa, 0x88, 0x19, 0x5a, 0x72, 0x2c, 0x23, 0x1e, 0x62, 0x4a, 0x8f,
	0xb2, 0xd3, 0xe4, 0x44, 0x51, 0x04, 0xb5, 0x89, 0x66, 0x12, 0x6b, 0xe8, 0x52, 0xc9, 0x9e, 0x33,
	0x82, 0xc0, 0xa6, 0x8f, 0xb1, 0x15, 0x72, 0xf6, 0xe6, 0x32, 0xda, 0xde, 0xe3, 0x33, 0xec, 0xa5,
	0x72, 0x8d, 0x66, 0xa7, 0xdb, 0xac, 0xd7, 0xfa, 0xcd, 0x06, 0x7d, 0x82, 0x9d, 0x24, 0xcb, 0xb3,
	0x64, 0xb4, 0x95, 0x27, 0xcd, 0x04, 0x6b, 0x51, 0xd4, 0x0e, 0x77, 0xf8, 0x66, 0xe4, 0xda, 0x0a,
	0x8b, 0xfc, 0x94, 0x59, 0x99, 0xab, 0x49, 0x73, 0xf1, 0xb8, 0x07, 0x52, 0x7a, 0x3c, 0xa4, 0x4f,
	0xb3, 0x3b, 0x49, 0x75, 0x0e, 0xa8, 0xad, 0xd7, 0xcc, 0x18, 0xd7, 0x39, 0xbf, 0x1e, 0x47, 0x35,
	0xc7, 0xe1, 0x71, 0xa8, 0x56, 0x05, 0x0f, 0xda, 0x61, 0x14, 0x2b, 0x7a, 0xb1, 0x54, 0x7f, 0x08,
	0xdd, 0xb5, 0x7e, 0xbf, 0x93, 0x17, 0xb3, 0x6e, 0x7a, 0x99, 0x00, 0xb5, 0x97, 0x86, 0xd9, 0xf4,
	0x8e, 0x80, 0x3e, 0x82, 0x3d, 0x50, 0x71, 0x44, 0x9b, 0xac, 0x4a, 0x8e, 0xe5, 0x48, 0x17, 0x1c,
	0x2e, 0xdc, 0x5e, 0x1c, 0x45, 0x5c, 0xa8, 0x9a, 0xa3, 0x92, 0x2c, 0x56, 0xd9, 0xdd, 0xe4, 0x8c,
	0x51, 0xa0, 0x2c, 0xba, 0x06, 0x28, 0xdb, 0xf3, 0xe5, 0xb6, 0x51, 0xca, 0x96, 0x99, 0x0a, 0x9a,
	0x02, 0x6f, 0x17, 0xda, 0xa1, 0x02, 0x81, 0x45, 0xdb, 0xc0, 0xb4, 0xed, 0x21, 0xd0, 0xb6, 0x19,
	0xc8, 0xaa, 0x17, 0xba, 0x99, 0x39, 0x49, 0x2f, 0x99, 0x5c, 0xe9, 0x70, 0xa9, 0x6a, 0x3e, 0x08,
	0x45, 0x9f, 0x31, 0x49, 0x89, 0xee, 0xd7, 0x3d, 0x07, 0x30, 0x23, 0x49, 0xd7, 0xcb, 0x13, 0x53,
	0x34, 0x8e, 0x6e, 0x4c, 0xa8, 0x64, 0xcc, 0x97, 0xf4, 0xb2, 0x99, 0xab, 0x01, 0xe8, 0x32, 0x5d,
	0x29, 0xb5, 0xda, 0x75, 0x57, 0x05, 0x40, 0xe6, 0x90, 0x76, 0xcc, 0xec, 0xca, 0x98, 0xd6, 0x7f,
	0x96, 0x1d, 0x21, 0x87, 0x0c, 0x07, 0xed, 0xce, 0x3a, 0x77, 0xec, 0xb4, 0x8c, 0x5d, 0x76, 0x8a,
	0x1c, 0x9f, 0x09, 0x69, 0xed, 0x1e, 0x3b, 0x4e, 0x8e, 0x94, 0x27, 0xdd, 0x64, 0x7e, 0xdf, 0x0c,
	0x0e, 0x2d, 0x18, 0x12, 0x74, 0x73, 0x82, 0xe9, 0x06, 0xa6, 0xcd, 0x5f, 0x35, 0x0b, 0x9c, 0x10,
	0xa5, 0x19, 0x60, 0x07, 0xe9, 0x56, 0xc9, 0x6b, 0x7e, 0xac, 0xb5, 0x9e, 0x63, 0xcb, 0xe4, 0xb0,
	0x61, 0x39, 0x45, 0xfb, 0x10, 0x44, 0x3e, 0x92, 0x99, 0x3e, 0xcf, 0xce, 0x90, 0x93, 0xf3, 0x50,
	0x6d, 0xe3, 0x5a, 0x29, 0x72, 0x61, 0x87, 0xaa, 0x95, 0xb0, 0xb3, 0x63, 0x4b, 0x49, 0x5f, 0x28,
	0x45, 0x5e, 0xc2, 0xb4, 0xfe, 0x8b, 0x66, 0x88, 0x53, 0x14, 0xa4, 0x2f, 0xb1, 0xbb, 0xc8, 0xa9,
	0xb9, 0xb0, 0xb6, 0xf2, 0xb2, 0x39, 0x45, 0x28, 0xd6, 0x01, 0x21, 0x79, 0x68, 0x5f, 0x4e, 0xd6,
	0x15, 0xdd, 0x36, 0xa7, 0x68, 0x02, 0xd4, 0x16, 0x5e, 0x31, 0x29, 0x97, 0xee, 0xed, 0xc8, 0x87,
	0xd7, 0xf1, 0x9b, 0xda, 0xe6, 0x16, 0x31, 0x11, 0xad, 0x3b, 0x30, 0x2b, 0xb5, 0x05, 0x83, 0x5a,
	0xa7, 0xdd, 0x85, 0xa1, 0x87, 0x6d, 0x12, 0xe9, 0x8c, 0xec, 0xd8, 0x0e, 0x86, 0x01, 0x66, 0xb5,
	0xc7, 0x52, 0x97, 0xf8, 0x20, 0x1f, 0xf5, 0x1d, 0x73, 0x14, 0x27, 0xd1, 0x35, 0xa5, 0x22, 0xed,
	0x6d, 0xc4, 0xee, 0x25, 0xe7, 0xe6, 0x49, 0xae, 0x72, 0x91, 0xdc, 0x11, 0x5a, 0xd8, 0x43, 0xd6,
	0x16, 0x69, 0x41, 0x50, 0xb7, 0x91, 0x70, 0x2e, 0x16, 0x81, 0xde, 0xb0, 0x90, 0xb5, 0xcb, 0xb3,
	0x20, 0xad, 0xfc, 0xa5, 0x35, 0x53, 0x1b, 0x97, 0x0b, 0xfd, 0xca, 0xc2, 0x6c, 0x96, 0xa6, 0xa0,
	0x06, 0xf8, 0x80, 0xd4, 0xf9, 0xda, 0xc2, 0x7e, 0x2c, 0x4e, 0x2b, 0xa6, 0x7c, 0xfe, 0xc6, 0xc2,
	0x7e, 0x9c, 0x98, 0x0d, 0x6a, 0xd7, 0xdf, 0x5a, 0x38, 0xcf, 0xfa, 0x0a, 0xdc, 0xb0, 0x93, 0x5a,
	0xa2, 0xdf, 0x86, 0x27, 0xc0, 0x51, 0x5c, 0xec, 0xd1, 0xef, 0x2c, 0x76, 0x8e, 0x9c, 0x9e, 0x2f,
	0xa0, 0x2d, 0x7d, 0x5f, 0x76, 0x97, 0x0b, 0x66, 0x6d, 0xe2, 0xb1, 0x4a, 0x6e, 0xc1, 0x1f, 0x2c,
	0x2c, 0xea, 0xd9, 0x9b, 0x0b, 0x69, 0x8b, 0x3f, 0x5a, 0xec, 0x6c, 0x41, 0x4a, 0x2d, 0x5c, 0xf7,
	0x3d, 0xbc, 0xa2, 0x13, 0x5e, 0x64, 0x46, 0x7f, 0xb2, 0xd8, 0x79, 0x72, 0xcf, 0xff, 0xca, 0x69,
	0xbb, 0x3f, 0x5b, 0xb8, 0xdc, 0x8a, 0xe7, 0x00, 0xa8, 0x2b, 0x51, 0xb2, 0x43, 0x24, 0xfd, 0xa5,
	0x54, 0x8c, 0x02, 0xd0, 0x9a, 0xbf, 0x26, 0x4f, 0x8c, 0x85, 0xe9, 0x87, 0xc4, 0x05, 0xfa, 0x7b,
	0xc5, 0xcc, 0x3e, 0x21, 0x7f, 0x2c, 0x9c, 0x11, 0x42, 0x7d, 0x11, 0xe3, 0x35, 0x81, 0x35, 0x8f,
	0x25, 0xfd, 0xa3, 0x62, 0x66, 0x3f, 0x5b, 0x48, 0xfb, 0xfa, 0xb3, 0x82, 0x13, 0xaf, 0x17, 0xe1,
	0xf8, 0xb2, 0xcc, 0x6f, 0xc5, 0xbf, 0x2a, 0x38, 0xae, 0xc5, 0xce, 0xa8, 0x67, 0xd3, 0x7a, 0xd5,
	0x76, 0xc6, 0x46, 0xea, 0x23, 0x3b, 0xc4, 0x8b, 0xe2, 0xef, 0x8a, 0x49, 0x9e, 0xfa, 0x08, 0x9c,
	0xeb, 0xab, 0x02, 0x8b, 0xe2, 0xca, 0x91, 0x17, 0xd1, 0x7f, 0x2a, 0x38, 0x4e, 0xd5, 0x39, 0xa8,
	0x0e, 0xe3, 0xdf, 0xca, 0xca, 0x6f, 0x16, 0xb9, 0xb5, 0xd9, 0xbb, 0x52, 0x3c, 0xc4, 0xd2, 0xef,
	0xed, 0xba, 0x80, 0x64, 0x7d, 0x1d, 0x2a, 0x1d, 0x8e, 0xe3, 0xa4, 0x8b, 0xec, 0x20, 0xa1, 0xfa,
	0xb0, 0x81, 0x03, 0x23, 0xf8, 0x1e, 0x5d, 0xca, 0x26, 0x33, 0xd3, 0x4f, 0xe8, 0xd8, 0x8b, 0x07,
	0xd2, 0x11, 0xde, 0x00, 0xdf, 0x01, 0x87, 0xb3, 0xc7, 0x98, 0x81, 0x6e, 0x86, 0xb2, 0xc0, 0x8f,
	0x64, 0xbb, 0xc7, 0x74, 0x94, 0xaf, 0x09, 0x7a, 0x34, 0xdb, 0x3d, 0xd3, 0xa6, 0xd3, 0x16, 0xa6,
	0xd9, 0xd1, 0x63, 0xd9, 0x92, 0x9b, 0x23, 0xd4, 0x85, 0x1d, 0x01, 0x72, 0x44, 0x97, 0x57, 0x6e,
	0x58, 0x84, 0x62, 0x59, 0x92, 0xd6, 0x6a, 0x16, 0x65, 0xdd, 0x48, 0xeb, 0x3d, 0x3e, 0xdc, 0x02,
	0xdf, 0xe1, 0x01, 0xd0, 0x8f, 0xab, 0x26, 0xd6, 0x4b, 0x9f, 0x6d, 0x39, 0xf6, 0x49, 0x35, 0x63,
	0x8c, 0xa1, 0xb7, 0x06, 0xbe, 0xcf, 0xe9, 0xa7, 0x25, 0x64, 0xac, 0x35, 0x46, 0x3e, 0xab, 0x66,
	0x5c, 0x32, 0x74, 0xf0, 0xf1, 0x19, 0x42, 0xfa, 0x98, 0xc8, 0xb8, 0xf4, 0x79, 0x49, 0x68, 0xac,
	0x3e, 0x25, 0xf4, 0x45, 0x75, 0xe5, 0xcd, 0x5b, 0x08, 0xc1, 0x54, 0xfa, 0x3c, 0xed, 0xb2, 0xa6,
	0x54, 0xf6, 0x3f, 0x1e, 0x96, 0x1a, 0xd6, 0xe6, 0x6d, 0x0b, 0x2f, 0x91, 0xe3, 0x33, 0x31, 0xcd,
	0x85, 0x77, 0x8a, 0xc1, 0xc9, 0x64, 0x92, 0xd1, 0xc2, 0xd6, 0xbc, 0x5b, 0x6c, 0xa9, 0x12, 0x30,
	0x7e, 0x7d, 0xbf, 0x67, 0x15, 0xf5, 0x29, 0xf1, 0xb8, 0xdd, 0xa1, 0xef, 0xe7, 0x1b, 0x2c, 0xdd,
	0xf3, 0xe9, 0x6a, 0x2d, 0xc0, 0x0f, 0xac, 0x22, 0xc7, 0x49, 0x50, 0x07, 0xf5, 0x61, 0xb1, 0x25,
	0x4a, 0x81, 0xa7, 0x6f, 0xec, 0x38, 0xc2, 0xf7, 0x49, 0x94, 0xee, 0xca, 0x8f, 0xac, 0x8b, 0xfb,
	0xd7, 0xac, 0x6b, 0xb7, 0x39, 0x72, 0xc8, 0x07, 0xf1, 0x8e, 0x7c, 0xc3, 0xda, 0xf7, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd9, 0xed, 0xc3, 0xfe, 0x7d, 0x0c, 0x00, 0x00,
}
